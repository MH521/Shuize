import json

# 假设data是提供的JSON数据解析成的Python字典
data = {
    "type":"*event.Website","value":{"url":"http://49.246.3.237/","httpFlow":{"exchanges":[{"request":{"method":"GET","url":"http://49.246.3.237/","cache":true,"patch":{},"rawHeader":"R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDQ5LjI0Ni4zLjIzNw0KDQo="},"response":{"status":"200 OK","proto":"HTTP/1.1","header":{"Accept-Ranges":{"header":["bytes"]},"Connection":{"header":["keep-alive"]},"Content-Length":{"header":["7833"]},"Content-Type":{"header":["text/html"]},"Date":{"header":["Fri, 12 Jul 2024 08:30:01 GMT"]},"Etag":{"header":["\"5747fe78.7833\""]},"Expires":{"header":["Fri, 12 Jul 2024 08:30:00 GMT"]},"Last-Modified":{"header":["Fri, 27 May 2016 07:59:52 GMT"]},"X-Frame-Options":{"header":["SAMEORIGIN"]}},"body":"","ip":"49.246.3.237","rawHeader":"SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNzgzMw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sDQpEYXRlOiBGcmksIDEyIEp1bCAyMDI0IDA4OjMwOjAxIEdNVA0KRXRhZzogIjU3NDdmZTc4Ljc4MzMiDQpFeHBpcmVzOiBGcmksIDEyIEp1bCAyMDI0IDA4OjMwOjAwIEdNVA0KTGFzdC1Nb2RpZmllZDogRnJpLCAyNyBNYXkgMjAxNiAwNzo1OTo1MiBHTVQNClgtRnJhbWUtT3B0aW9uczogU0FNRU9SSUdJTg0KDQo="}}]},"fingerprints":[{"product":{"name":"crocus"},"proof":{"steps":[{"httpFlow":{"exchanges":[{"request":{"method":"GET","url":"http://49.246.3.237/","cache":true,"patch":{},"rawHeader":"R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDQ5LjI0Ni4zLjIzNw0KDQo="},"response":{"status":"200 OK","proto":"HTTP/1.1","header":{"Accept-Ranges":{"header":["bytes"]},"Connection":{"header":["keep-alive"]},"Content-Length":{"header":["7833"]},"Content-Type":{"header":["text/html"]},"Date":{"header":["Fri, 12 Jul 2024 08:30:01 GMT"]},"Etag":{"header":["\"5747fe78.7833\""]},"Expires":{"header":["Fri, 12 Jul 2024 08:30:00 GMT"]},"Last-Modified":{"header":["Fri, 27 May 2016 07:59:52 GMT"]},"X-Frame-Options":{"header":["SAMEORIGIN"]}},"body":"","ip":"49.246.3.237","rawHeader":"SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNzgzMw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sDQpEYXRlOiBGcmksIDEyIEp1bCAyMDI0IDA4OjMwOjAxIEdNVA0KRXRhZzogIjU3NDdmZTc4Ljc4MzMiDQpFeHBpcmVzOiBGcmksIDEyIEp1bCAyMDI0IDA4OjMwOjAwIEdNVA0KTGFzdC1Nb2RpZmllZDogRnJpLCAyNyBNYXkgMjAxNiAwNzo1OTo1MiBHTVQNClgtRnJhbWUtT3B0aW9uczogU0FNRU9SSUdJTg0KDQo="}}]},"description":"r0","template":"response.body_string.contains('src=\"images/logo.png\"')"}],"template":"r0() || r1()","detail":{}},"extra":{"fofa":"body=\"src=\\\"images/logo.png\\\"\" || body=\"for=\\\"inp_verification\\\"\""},"source":"eyJwYXlsb2FkIjoiIiwic3RhdHVzIjp7InIwIjp0cnVlfX0="}]}
    }

def extract_names(obj):
    names = []
    for item in obj:
        # 检查当前项是否为字典
        if isinstance(item, dict):
            # 检查字典中是否存在 'fingerprints' 键
            if 'fingerprints' in item:
                # 遍历 'fingerprints' 中的每个元素
                for fingerprint in item['fingerprints']:
                    # 检查 'product' 键是否存在于指纹中
                    if 'product' in fingerprint:
                        # 提取 'name' 字段的值
                        if 'name' in fingerprint['product']:
                            names.append(fingerprint['product']['name'])
    return names

# 假设 data 是你提供的 Python 对象

# 调用函数并打印结果
names_list = extract_names(data)
print(names_list)